new project -> database -> create modal -> create controller -> fill dummy data -> create view with bootstrap	

get and show all posts -> get one post for update -> 



// framework vs library
framework best practice like resource

// create controller resources
php artisan make:controller PostController --resource

 - use << Router::resource('/teacher', PostController::class)

 - to list all routes use << php artisan route:list

// Create new laravel project
 - composer create-project laravel/laravel  --prefer-dist first_project

// database
 - create database
 - create post model with migration << php artisan make:model Post -c >>
 - create fields in the post model
 - migrate << php artisan migrate >>

// fill post data with tinker
 - php artisan tinker
   - $post = new App\Models\Post
   - $post->title = 'first post' 
   - $post->content = 'My first post content'
   - $post->save()
// Post-all()







<?php

namespace App\Http\Controllers;

use App\Models\Post;
use Illuminate\Http\Request;

class PostController extends Controller
{
  public function index()
  {
    $posts = Post::all();
    return view('posts.index', ['posts' => $posts]);
  }

  public function edit(Post $post)
  {
    return view('posts.edit', ['post' => $post]);
  }

  public function update(Post $post)
  {
    
    request()->validate([
      'title'=>'required',
      'content'=>'required'
    ]);
    $post->update(extract($post));
    redirect('/posts');
  }
  
  public function create()
  {
    return view('posts.create');
  }
  
  public function store()
  {
    request()->validate([
      'title'=>'required',
      'content'=>'required'
    ]);
    Post::create([
      'title'=>request('title'),
      'content'=>request('content')
    ]);
    redirect('/posts');
  }
}




























z-index: 99999;
position: absolute;
background: #313844;
right: 214px;
top: 61px;
width: 315px;
height: 624px;
border-left: 1px solid;

npm i @popperjs/core

//////////////

// Create new laravel project
composer create-project laravel/laravel  --prefer-dist first_project

// database
  - create database using phpmyadmin
  - configure .env
  - create table << php artisan make:migration create_projects_table --create=projects >>

